<apex:page controller="FileUploadController" showHeader="false" sidebar="false">
<head>
<style>
#drop_zone {
    background: url("/static/184/img/chatterfiles/uploadWhiteArrow12.png") no-repeat center;
}
#uploading {
    background: url("/static/184/img/chatterfiles/uploadWhiteArrow12.png") no-repeat center;
    display:none;
}
#uploadList {
list-style-image: url("{!$Resource.AnimatedCircleForWaiting}");
}
</style>

<script type="text/javascript">var __sfdcSessionId = '{!GETSESSIONID()}';</script>
<script src="../../soap/ajax/29.0/connection.js" type="text/javascript"></script>
<link href="/sCSS/25.0/sprites/1346435804000/Theme3/default/gc/chatterExtended.css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css"/>
</head>
<div id="drop_zone" style="height:200px;width:180px;background-size:35%;">
Recent Files<br/>
<apex:repeat value="{!attachments}" var="attachment" id="theRepeat">
    <span class="fileTypeIcon">
	<img src="/s.gif" alt="{!attachment.ContentType}" width="16" height="16" class="{!attachment.ContentType}" style="vertical-align: middle; margin-right: 0.4em;" title="{!attachment.ContentType}"/>&nbsp;
    </span>
<a href ="/servlet/servlet.FileDownload?file={!attachment.id}">
<apex:outputText value="{!attachment.name}" />
</a>
<br/>
</apex:repeat>
<apex:outputLink value="/002?parent_id={!ParentId}&id={!ParentId}" target="_parent" rendered="{!attachments != null && attachments.size == 10}">(Show more/Manage)</apex:outputLink>
<apex:outputLink value="/002?parent_id={!ParentId}&id={!ParentId}" target="_parent" rendered="{!attachments != null && attachments.size >=1 && attachments.size <10}">(Manage Files)</apex:outputLink>
</div>
<div id="uploading" style="outline:black dotted thin;height:200px;width:180px;">
Uploading Files..
<output id="uploadList"></output>
</div>    


<script>
function uploadAttachment(filecontent, filename, filetype, parentId) {
    var attachment         = new sforce.SObject('Attachment');
    attachment.Name        = filename;
    attachment.IsPrivate   = false;
    attachment.ContentType = filetype;
    attachment.Body        = filecontent;
    attachment.Description = filename;
    attachment.ParentId    = parentId;
     var result = sforce.connection.create([attachment]);
      if (result[0].getBoolean("success")) {
	    console.log("new attachment created with id " + result[0].id);
	  } else {
	    console.log("new attachment failed to create" + result[0]);
	  }
}
  function handleFileSelect(evt) {
    evt.stopPropagation();
    evt.preventDefault();

    var files = evt.dataTransfer.files; // FileList object.
    if (files.length > 0) {
        try {
        		//hide drop_zone
			    document.getElementById('drop_zone').style.display = 'none';        		        		
        		//show uploading
			    document.getElementById('uploading').style.display = 'block';
            	uploadFiles(files);
            	setTimeout(function() { 
						        		//show drop_zone
									    document.getElementById('drop_zone').style.display = 'block';        		        		
						        		//hide uploading
									    document.getElementById('uploading').style.display = 'none';
									    location.reload();  
            						  }, 5000); 
        } catch(error) {
            alert('An error occured in sfdc-dragndrop.js: ' + error);
        }  
    }     

    // files is a FileList of File objects. List some properties.
    var output = [];
    for (var i = 0, f; f = files[i]; i++) {
      output.push('<li><strong>', escape(f.name), '</strong></li>');
    }
    document.getElementById('uploadList').innerHTML = '<ul>' + output.join('') + '</ul>';
  }

  function handleDragOver(evt) {
    evt.stopPropagation();
    evt.preventDefault();
    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
  }

  function uploadFiles(files) {
    for(var index = 0, file; file = files[index]; index++) {
        var reader = new FileReader();

        reader.onloadend = 
            (function(file) { 
                 return function(evt) {
                     var fileContent = getFileContent(evt.target.result)
                     var parentId    = '{!ParentId}';
                     uploadAttachment(fileContent, file.name, file.type, parentId);
                 };
             })(file);

        reader.readAsDataURL(file);
    }
}

function getFileContent(fileData) {
    var fileContent = String(fileData);
    return fileContent.substr(fileContent.indexOf(',') + 1);
}

  // Setup the dnd listeners.
  var dropZone = document.getElementById('drop_zone');
  dropZone.addEventListener('dragover', handleDragOver, false);
  dropZone.addEventListener('drop', handleFileSelect, false);
</script>      
</apex:page>
